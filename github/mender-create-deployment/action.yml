# action.yml
name: 'Create Mender deployment'
description: 'Create a deployment on a hosted Mender backend instance'
inputs:
  mender_pat:
    description: 'personal access token for the hosted Mender backend account to be used'
    required: true
  mender_deployment_name:
    description: 'deployment name to be created'
    required: true
  mender_release_name:
    description: 'mender artifacts release name'
    required: true
  mender_devices_group:
    description: 'the name of the devices group to which the release will be deployed'
    required: true
  mender_uri:
    description: 'URI for the hosted Mender backend account to be used'
    required: false
    default: 'https://hosted.mender.io'
runs:
  using: "composite"
  steps:
    - id: get_devices_list
      run: |
        MENDER_DEVICES_LIST=$(curl -s \
          -H "Authorization: Bearer ${{ inputs.mender_pat }}" \
          ${{ inputs.mender_uri }}/api/management/v1/inventory/groups/${{ inputs.mender_devices_group }}/devices)
        if [[ ${MENDER_DEVICES_LIST} != \[* ]]; then
          echo "ERROR: failed to get devices list for group '${{ inputs.mender_devices_group }}'"
          echo "Server's response: ${MENDER_DEVICES_LIST}"
          exit 1
        fi
        echo "MENDER_DEVICES_LIST=${MENDER_DEVICES_LIST}" >> ${GITHUB_ENV}
      shell: bash
    - id: create_deployment
      run: |
        RESPONSE=$(curl -s -X POST ${{ inputs.mender_uri }}/api/management/v1/deployments/deployments \
          -H "Content-Type: application/json" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ inputs.mender_pat }}" \
          --data-raw "{\"name\": \"${{ inputs.mender_deployment_name }}\", \"artifact_name\": \"${{ inputs.mender_release_name }}\", \"devices\": ${MENDER_DEVICES_LIST}}")
          if [[ ! -z "${RESPONSE}" || "${RESPONSE}" != "" ]]; then
            echo "ERROR: failed to create deployment"
            echo "Server's response: ${RESPONSE}"
            exit 1
          fi
          echo "INFO: deployment '${{ inputs.mender_deployment_name }}' with release '${{ inputs.mender_release_name }}' for device group '${{ inputs.mender_devices_group }}' successfully created"
      shell: bash
